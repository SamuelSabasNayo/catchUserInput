{"/Users/SamuelNayo/Documents/codegig/src/app.js":{"path":"/Users/SamuelNayo/Documents/codegig/src/app.js","statementMap":{"0":{"start":{"line":3,"column":29},"end":{"line":3,"column":84}},"1":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"3":{"start":{"line":10,"column":15},"end":{"line":10,"column":57}},"4":{"start":{"line":12,"column":14},"end":{"line":12,"column":55}},"5":{"start":{"line":14,"column":18},"end":{"line":14,"column":64}},"6":{"start":{"line":16,"column":12},"end":{"line":16,"column":51}},"7":{"start":{"line":18,"column":17},"end":{"line":18,"column":61}},"8":{"start":{"line":20,"column":14},"end":{"line":20,"column":64}},"9":{"start":{"line":22,"column":19},"end":{"line":22,"column":74}},"10":{"start":{"line":24,"column":20},"end":{"line":24,"column":68}},"11":{"start":{"line":26,"column":24},"end":{"line":26,"column":77}},"12":{"start":{"line":28,"column":10},"end":{"line":28,"column":36}},"13":{"start":{"line":30,"column":0},"end":{"line":30,"column":28}},"14":{"start":{"line":32,"column":21},"end":{"line":45,"column":1}},"15":{"start":{"line":46,"column":18},"end":{"line":46,"column":63}},"16":{"start":{"line":47,"column":0},"end":{"line":47,"column":106}},"17":{"start":{"line":49,"column":17},"end":{"line":49,"column":51}},"18":{"start":{"line":51,"column":16},"end":{"line":51,"column":53}},"19":{"start":{"line":53,"column":0},"end":{"line":57,"column":3}},"20":{"start":{"line":54,"column":2},"end":{"line":54,"column":46}},"21":{"start":{"line":56,"column":2},"end":{"line":56,"column":44}},"22":{"start":{"line":59,"column":0},"end":{"line":59,"column":39}},"23":{"start":{"line":60,"column":0},"end":{"line":62,"column":4}},"24":{"start":{"line":63,"column":0},"end":{"line":65,"column":4}},"25":{"start":{"line":66,"column":0},"end":{"line":66,"column":33}},"26":{"start":{"line":68,"column":15},"end":{"line":68,"column":24}},"27":{"start":{"line":69,"column":0},"end":{"line":73,"column":3}},"28":{"start":{"line":70,"column":2},"end":{"line":72,"column":5}},"29":{"start":{"line":74,"column":0},"end":{"line":74,"column":64}},"30":{"start":{"line":75,"column":0},"end":{"line":80,"column":3}},"31":{"start":{"line":76,"column":2},"end":{"line":79,"column":5}},"32":{"start":{"line":81,"column":15},"end":{"line":81,"column":18}},"33":{"start":{"line":82,"column":0},"end":{"line":82,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":53,"column":30},"end":{"line":53,"column":31}},"loc":{"start":{"line":53,"column":42},"end":{"line":55,"column":1}},"line":53},"1":{"name":"(anonymous_1)","decl":{"start":{"line":55,"column":12},"end":{"line":55,"column":13}},"loc":{"start":{"line":55,"column":27},"end":{"line":57,"column":1}},"line":55},"2":{"name":"(anonymous_2)","decl":{"start":{"line":69,"column":29},"end":{"line":69,"column":30}},"loc":{"start":{"line":69,"column":49},"end":{"line":73,"column":1}},"line":69},"3":{"name":"(anonymous_3)","decl":{"start":{"line":75,"column":14},"end":{"line":75,"column":15}},"loc":{"start":{"line":75,"column":34},"end":{"line":80,"column":1}},"line":75}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1},"f":{"0":1,"1":0,"2":1,"3":1},"b":{},"inputSourceMap":{"version":3,"sources":["app.js"],"names":["app","dotenv","config","swaggerOptions","swaggerDefinition","openapi","info","title","description","contact","name","servers","apis","swaggerDocs","use","swaggerUi","serve","setup","DEV_DB_url","development","url","sequelize","Sequelize","authenticate","then","console","log","err","bodyParser","json","urlencoded","extended","type","basePath","get","req","res","status","message","usersRoutes","send"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;;AAEAC,mBAAOC,MAAP;;AAEA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,OAAO,EAAE,OADQ;AAEjBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,cADH;AAEJC,MAAAA,WAAW,EAAE,0BAFT;AAGJC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE;AADC,OAHL;AAMJC,MAAAA,OAAO,EAAE,CAAC,uBAAD;AANL;AAFW,GADE;AAYrBC,EAAAA,IAAI,EAAE,CAAC,mBAAD;AAZe,CAAvB;AAeA,IAAMC,WAAW,GAAG,8BAAaV,cAAb,CAApB;AACAH,GAAG,CAACc,GAAJ,CAAQ,WAAR,EAAqBC,6BAAUC,KAA/B,EAAsCD,6BAAUE,KAAV,CAAgBJ,WAAhB,CAAtC,E,CAEA;;AACA,IAAMK,UAAU,GAAGhB,mBAAOiB,WAAP,CAAmBC,GAAtC,C,CAEA;;AACA,IAAMC,SAAS,GAAG,IAAIC,qBAAJ,CAAcJ,UAAd,CAAlB,C,CAEA;;AACAG,SAAS,CAACE,YAAV,GACGC,IADH,CACQ;AAAA,SAAMC,OAAO,CAACC,GAAR,yBAAN;AAAA,CADR,WAES,UAAAC,GAAG;AAAA,SAAIF,OAAO,CAACC,GAAR,kBAAsBC,GAAtB,EAAJ;AAAA,CAFZ,E,CAIA;;AACA3B,GAAG,CAACc,GAAJ,CAAQc,uBAAWC,IAAX,EAAR;AACA7B,GAAG,CAACc,GAAJ,CAAQc,uBAAWE,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACA/B,GAAG,CAACc,GAAJ,CAAQc,uBAAWC,IAAX,CAAgB;AAAEG,EAAAA,IAAI,EAAE;AAAR,CAAhB,CAAR;AACAhC,GAAG,CAACc,GAAJ,CAAQ,uBAAR,E,CAGA;;AACA,IAAMmB,QAAQ,GAAG,SAAjB;AACAjC,GAAG,CAACkC,GAAJ,WAAWD,QAAX,GAAuB,UAACE,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AAAES,IAAAA,OAAO,EAAE;AAAX,GAArB,CAAd;AAAA,CAAvB;AACAtC,GAAG,CAACc,GAAJ,WAAWmB,QAAX,aAA6BM,uBAA7B;AACAvC,GAAG,CAACkC,GAAJ,CAAQ,IAAR,EAAc,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAEA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBG,IAAhB,CAAqB;AAAEH,IAAAA,MAAM,EAAE,GAAV;AAAeC,IAAAA,OAAO;AAAtB,GAArB;AAAmF,CAAjH;eAGetC,G","sourceRoot":"/Users/SamuelNayo/Documents/codegig/src/","sourcesContent":["import express from 'express';\nimport dotenv from 'dotenv';\nimport bodyParser from \"body-parser\";\nimport cors from \"cors\";\nimport Sequelize from \"sequelize\";\nimport config from \"./config/config\";\nimport usersRoutes from \"./routes/usersRoutes\";\nimport swaggerJsDoc from 'swagger-jsdoc';\nimport swaggerUi from 'swagger-ui-express';\n\nconst app = express();\n\ndotenv.config();\n\nconst swaggerOptions = {\n  swaggerDefinition: {\n    openapi: '3.0.0',\n    info: {\n      title: 'Code Gig API',\n      description: 'Code Gig API Information',\n      contact: {\n        name: 'SamuelNayo'\n      },\n      servers: ['http://localhost:5000']\n    }\n  },\n  apis: ['./src/routes/*.js']\n};\n\nconst swaggerDocs = swaggerJsDoc(swaggerOptions);\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocs));\n\n// Database url\nconst DEV_DB_url = config.development.url;\n\n//Connecting to database\nconst sequelize = new Sequelize(DEV_DB_url);\n\n// Test DB\nsequelize.authenticate()\n  .then(() => console.log(`Database connected...`))\n  .catch(err => console.log(`Error: ${err}`));\n\n// Middlewares\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json({ type: 'application/json' }));\napp.use(cors());\n\n\n// routes\nconst basePath = '/api/v1'\napp.get(`${basePath}`, (req, res) => res.status(200).json({ message: 'Welcome on CodeGig' }));\napp.use(`${basePath}/users`, usersRoutes);\napp.get('**', (req, res) => { res.status(400).send({ status: 404, message: `404 Page Not Found on CodeGig!` }); });\n\n\nexport default app;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"487f835d8cd9e55c5375bab010cab84361406955","contentHash":"e98d8151a55ced03f94b63ca46a131cea427b4183e2375b26a907937fe45d766"},"/Users/SamuelNayo/Documents/codegig/src/config/config.js":{"path":"/Users/SamuelNayo/Documents/codegig/src/config/config.js","statementMap":{"0":{"start":{"line":3,"column":29},"end":{"line":3,"column":84}},"1":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"3":{"start":{"line":10,"column":14},"end":{"line":10,"column":55}},"4":{"start":{"line":12,"column":0},"end":{"line":12,"column":28}},"5":{"start":{"line":14,"column":15},"end":{"line":27,"column":1}},"6":{"start":{"line":28,"column":0},"end":{"line":28,"column":30}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["config.js"],"names":["dotenv","config","development","url","process","env","DEV_DATABASE_URL","dialect","test","TEST_DATABASE_URL","production","DATABASE_URL"],"mappings":";;;;;;;;;AAAA;;AAEAA,mBAAOC,MAAP;;eAEe;AACbC,EAAAA,WAAW,EAAE;AACXC,IAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADN;AAEXC,IAAAA,OAAO,EAAE;AAFE,GADA;AAKbC,EAAAA,IAAI,EAAE;AACJL,IAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYI,iBADb;AAEJF,IAAAA,OAAO,EAAE;AAFL,GALO;AASbG,EAAAA,UAAU,EAAE;AACVP,IAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYM,YADP;AAEVJ,IAAAA,OAAO,EAAE;AAFC;AATC,C","sourceRoot":"/Users/SamuelNayo/Documents/codegig/src/config/","sourcesContent":["import dotenv from 'dotenv';\n\ndotenv.config()\n\nexport default {\n  development: {\n    url: process.env.DEV_DATABASE_URL,\n    dialect: 'postgres',\n  },\n  test: {\n    url: process.env.TEST_DATABASE_URL,\n    dialect: 'postgres',\n  },\n  production: {\n    url: process.env.DATABASE_URL,\n    dialect: 'postgres',\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c9a8cefd7c6a566695bec06a95c26ca9e26354df","contentHash":"40b4ad315b67f935f2fda0d2e95630533911b7db7e52cb26157e101517322239"},"/Users/SamuelNayo/Documents/codegig/src/routes/usersRoutes.js":{"path":"/Users/SamuelNayo/Documents/codegig/src/routes/usersRoutes.js","statementMap":{"0":{"start":{"line":3,"column":29},"end":{"line":3,"column":84}},"1":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"3":{"start":{"line":10,"column":15},"end":{"line":10,"column":33}},"4":{"start":{"line":12,"column":22},"end":{"line":12,"column":62}},"5":{"start":{"line":14,"column":14},"end":{"line":14,"column":67}},"6":{"start":{"line":16,"column":11},"end":{"line":16,"column":34}},"7":{"start":{"line":17,"column":13},"end":{"line":17,"column":35}},"8":{"start":{"line":28,"column":0},"end":{"line":28,"column":57}},"9":{"start":{"line":39,"column":0},"end":{"line":39,"column":60}},"10":{"start":{"line":40,"column":0},"end":{"line":40,"column":62}},"11":{"start":{"line":41,"column":15},"end":{"line":41,"column":21}},"12":{"start":{"line":42,"column":0},"end":{"line":42,"column":30}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["usersRoutes.js"],"names":["User","models","router","get","UserController","getUsers","post","addUser","put","updateUser"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;IAEQA,I,GAASC,kB,CAATD,I;AAER,IAAME,MAAM,GAAG,sBAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,+BAAeC,QAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAH,MAAM,CAACI,IAAP,CAAY,MAAZ,EAAoBF,+BAAeG,OAAnC;AACAL,MAAM,CAACM,GAAP,CAAW,MAAX,EAAmBJ,+BAAeK,UAAlC;eAEeP,M","sourceRoot":"/Users/SamuelNayo/Documents/codegig/src/routes/","sourcesContent":["import { Router } from \"express\";\nimport { UserController } from \"../controllers/userController\";\nimport models from '../database/models';\n\nconst { User } = models;\n\nconst router = Router();\n/**\n*  @swagger\n*  /users:\n*   get:\n*    description: Get a list of all users\n*    responses:\n*      '200':\n*        description: A successful response.\n*/\nrouter.get('/', UserController.getUsers);\n\n/**\n*  @swagger\n*  /users/add:\n*   post:\n*    description: Add a user\n*    responses:\n*      '200':\n*        description: A successful response.\n*/\nrouter.post('/add', UserController.addUser);\nrouter.put('/:id', UserController.updateUser);\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"29a0a356a1cbcfd8eb63ddebf180a276e3fc8b37","contentHash":"d11e6a5521aed98a73348e90825f1ca7422d87a780bbdd45e0b31294ace76953"},"/Users/SamuelNayo/Documents/codegig/src/controllers/userController.js":{"path":"/Users/SamuelNayo/Documents/codegig/src/controllers/userController.js","statementMap":{"0":{"start":{"line":3,"column":29},"end":{"line":3,"column":84}},"1":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}},"3":{"start":{"line":10,"column":19},"end":{"line":10,"column":80}},"4":{"start":{"line":12,"column":25},"end":{"line":12,"column":99}},"5":{"start":{"line":14,"column":23},"end":{"line":14,"column":95}},"6":{"start":{"line":16,"column":20},"end":{"line":16,"column":89}},"7":{"start":{"line":18,"column":25},"end":{"line":18,"column":54}},"8":{"start":{"line":20,"column":14},"end":{"line":20,"column":67}},"9":{"start":{"line":22,"column":11},"end":{"line":22,"column":34}},"10":{"start":{"line":24,"column":34},"end":{"line":212,"column":3}},"11":{"start":{"line":26,"column":4},"end":{"line":26,"column":59}},"12":{"start":{"line":29,"column":2},"end":{"line":210,"column":6}},"13":{"start":{"line":32,"column":22},"end":{"line":61,"column":9}},"14":{"start":{"line":34,"column":8},"end":{"line":60,"column":36}},"15":{"start":{"line":35,"column":10},"end":{"line":59,"column":11}},"16":{"start":{"line":36,"column":12},"end":{"line":58,"column":13}},"17":{"start":{"line":38,"column":16},"end":{"line":38,"column":34}},"18":{"start":{"line":39,"column":16},"end":{"line":39,"column":34}},"19":{"start":{"line":40,"column":16},"end":{"line":40,"column":38}},"20":{"start":{"line":43,"column":16},"end":{"line":43,"column":41}},"21":{"start":{"line":44,"column":16},"end":{"line":46,"column":19}},"22":{"start":{"line":47,"column":16},"end":{"line":47,"column":35}},"23":{"start":{"line":48,"column":16},"end":{"line":48,"column":22}},"24":{"start":{"line":51,"column":16},"end":{"line":51,"column":34}},"25":{"start":{"line":52,"column":16},"end":{"line":52,"column":51}},"26":{"start":{"line":53,"column":16},"end":{"line":53,"column":68}},"27":{"start":{"line":57,"column":16},"end":{"line":57,"column":39}},"28":{"start":{"line":64,"column":8},"end":{"line":64,"column":48}},"29":{"start":{"line":67,"column":6},"end":{"line":67,"column":22}},"30":{"start":{"line":72,"column":21},"end":{"line":128,"column":9}},"31":{"start":{"line":74,"column":8},"end":{"line":127,"column":38}},"32":{"start":{"line":75,"column":10},"end":{"line":126,"column":11}},"33":{"start":{"line":76,"column":12},"end":{"line":125,"column":13}},"34":{"start":{"line":78,"column":16},"end":{"line":78,"column":35}},"35":{"start":{"line":80,"column":16},"end":{"line":80,"column":38}},"36":{"start":{"line":81,"column":16},"end":{"line":81,"column":35}},"37":{"start":{"line":82,"column":16},"end":{"line":86,"column":19}},"38":{"start":{"line":89,"column":16},"end":{"line":89,"column":46}},"39":{"start":{"line":91,"column":16},"end":{"line":94,"column":17}},"40":{"start":{"line":92,"column":18},"end":{"line":92,"column":37}},"41":{"start":{"line":93,"column":18},"end":{"line":93,"column":24}},"42":{"start":{"line":96,"column":16},"end":{"line":100,"column":20}},"43":{"start":{"line":103,"column":16},"end":{"line":103,"column":35}},"44":{"start":{"line":104,"column":16},"end":{"line":106,"column":19}},"45":{"start":{"line":109,"column":16},"end":{"line":109,"column":43}},"46":{"start":{"line":110,"column":16},"end":{"line":113,"column":19}},"47":{"start":{"line":114,"column":16},"end":{"line":114,"column":36}},"48":{"start":{"line":115,"column":16},"end":{"line":115,"column":22}},"49":{"start":{"line":118,"column":16},"end":{"line":118,"column":36}},"50":{"start":{"line":119,"column":16},"end":{"line":119,"column":53}},"51":{"start":{"line":120,"column":16},"end":{"line":120,"column":69}},"52":{"start":{"line":124,"column":16},"end":{"line":124,"column":40}},"53":{"start":{"line":131,"column":8},"end":{"line":131,"column":47}},"54":{"start":{"line":134,"column":6},"end":{"line":134,"column":21}},"55":{"start":{"line":139,"column":24},"end":{"line":202,"column":9}},"56":{"start":{"line":142,"column":8},"end":{"line":201,"column":38}},"57":{"start":{"line":143,"column":10},"end":{"line":200,"column":11}},"58":{"start":{"line":144,"column":12},"end":{"line":199,"column":13}},"59":{"start":{"line":146,"column":16},"end":{"line":146,"column":35}},"60":{"start":{"line":147,"column":16},"end":{"line":147,"column":87}},"61":{"start":{"line":148,"column":16},"end":{"line":148,"column":35}},"62":{"start":{"line":149,"column":16},"end":{"line":153,"column":19}},"63":{"start":{"line":156,"column":16},"end":{"line":156,"column":46}},"64":{"start":{"line":158,"column":16},"end":{"line":161,"column":17}},"65":{"start":{"line":159,"column":18},"end":{"line":159,"column":37}},"66":{"start":{"line":160,"column":18},"end":{"line":160,"column":24}},"67":{"start":{"line":163,"column":16},"end":{"line":167,"column":20}},"68":{"start":{"line":170,"column":16},"end":{"line":170,"column":35}},"69":{"start":{"line":171,"column":16},"end":{"line":175,"column":19}},"70":{"start":{"line":178,"column":16},"end":{"line":178,"column":45}},"71":{"start":{"line":179,"column":16},"end":{"line":182,"column":19}},"72":{"start":{"line":183,"column":16},"end":{"line":183,"column":36}},"73":{"start":{"line":184,"column":16},"end":{"line":184,"column":22}},"74":{"start":{"line":187,"column":16},"end":{"line":187,"column":36}},"75":{"start":{"line":188,"column":16},"end":{"line":188,"column":53}},"76":{"start":{"line":189,"column":16},"end":{"line":191,"column":19}},"77":{"start":{"line":198,"column":16},"end":{"line":198,"column":40}},"78":{"start":{"line":205,"column":8},"end":{"line":205,"column":50}},"79":{"start":{"line":208,"column":6},"end":{"line":208,"column":24}},"80":{"start":{"line":211,"column":2},"end":{"line":211,"column":24}},"81":{"start":{"line":214,"column":0},"end":{"line":214,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":24,"column":34},"end":{"line":24,"column":35}},"loc":{"start":{"line":24,"column":46},"end":{"line":212,"column":1}},"line":24},"1":{"name":"UserController","decl":{"start":{"line":25,"column":11},"end":{"line":25,"column":25}},"loc":{"start":{"line":25,"column":28},"end":{"line":27,"column":3}},"line":25},"2":{"name":"(anonymous_2)","decl":{"start":{"line":31,"column":11},"end":{"line":31,"column":12}},"loc":{"start":{"line":31,"column":23},"end":{"line":68,"column":5}},"line":31},"3":{"name":"_callee","decl":{"start":{"line":32,"column":109},"end":{"line":32,"column":116}},"loc":{"start":{"line":32,"column":127},"end":{"line":61,"column":7}},"line":32},"4":{"name":"_callee$","decl":{"start":{"line":34,"column":53},"end":{"line":34,"column":61}},"loc":{"start":{"line":34,"column":72},"end":{"line":60,"column":9}},"line":34},"5":{"name":"getUsers","decl":{"start":{"line":63,"column":15},"end":{"line":63,"column":23}},"loc":{"start":{"line":63,"column":33},"end":{"line":65,"column":7}},"line":63},"6":{"name":"(anonymous_6)","decl":{"start":{"line":71,"column":11},"end":{"line":71,"column":12}},"loc":{"start":{"line":71,"column":23},"end":{"line":135,"column":5}},"line":71},"7":{"name":"_callee2","decl":{"start":{"line":72,"column":108},"end":{"line":72,"column":116}},"loc":{"start":{"line":72,"column":127},"end":{"line":128,"column":7}},"line":72},"8":{"name":"_callee2$","decl":{"start":{"line":74,"column":53},"end":{"line":74,"column":62}},"loc":{"start":{"line":74,"column":74},"end":{"line":127,"column":9}},"line":74},"9":{"name":"addUser","decl":{"start":{"line":130,"column":15},"end":{"line":130,"column":22}},"loc":{"start":{"line":130,"column":33},"end":{"line":132,"column":7}},"line":130},"10":{"name":"(anonymous_10)","decl":{"start":{"line":138,"column":11},"end":{"line":138,"column":12}},"loc":{"start":{"line":138,"column":23},"end":{"line":209,"column":5}},"line":138},"11":{"name":"_callee3","decl":{"start":{"line":139,"column":111},"end":{"line":139,"column":119}},"loc":{"start":{"line":139,"column":130},"end":{"line":202,"column":7}},"line":139},"12":{"name":"_callee3$","decl":{"start":{"line":142,"column":53},"end":{"line":142,"column":62}},"loc":{"start":{"line":142,"column":74},"end":{"line":201,"column":9}},"line":142},"13":{"name":"updateUser","decl":{"start":{"line":204,"column":15},"end":{"line":204,"column":25}},"loc":{"start":{"line":204,"column":36},"end":{"line":206,"column":7}},"line":204}},"branchMap":{"0":{"loc":{"start":{"line":36,"column":12},"end":{"line":58,"column":13}},"type":"switch","locations":[{"start":{"line":37,"column":14},"end":{"line":40,"column":38}},{"start":{"line":42,"column":14},"end":{"line":48,"column":22}},{"start":{"line":50,"column":14},"end":{"line":53,"column":68}},{"start":{"line":55,"column":14},"end":{"line":55,"column":22}},{"start":{"line":56,"column":14},"end":{"line":57,"column":39}}],"line":36},"1":{"loc":{"start":{"line":76,"column":12},"end":{"line":125,"column":13}},"type":"switch","locations":[{"start":{"line":77,"column":14},"end":{"line":86,"column":19}},{"start":{"line":88,"column":14},"end":{"line":100,"column":20}},{"start":{"line":102,"column":14},"end":{"line":106,"column":19}},{"start":{"line":108,"column":14},"end":{"line":115,"column":22}},{"start":{"line":117,"column":14},"end":{"line":120,"column":69}},{"start":{"line":122,"column":14},"end":{"line":122,"column":22}},{"start":{"line":123,"column":14},"end":{"line":124,"column":40}}],"line":76},"2":{"loc":{"start":{"line":91,"column":16},"end":{"line":94,"column":17}},"type":"if","locations":[{"start":{"line":91,"column":16},"end":{"line":94,"column":17}},{"start":{"line":91,"column":16},"end":{"line":94,"column":17}}],"line":91},"3":{"loc":{"start":{"line":144,"column":12},"end":{"line":199,"column":13}},"type":"switch","locations":[{"start":{"line":145,"column":14},"end":{"line":153,"column":19}},{"start":{"line":155,"column":14},"end":{"line":167,"column":20}},{"start":{"line":169,"column":14},"end":{"line":175,"column":19}},{"start":{"line":177,"column":14},"end":{"line":184,"column":22}},{"start":{"line":186,"column":14},"end":{"line":191,"column":19}},{"start":{"line":193,"column":14},"end":{"line":194,"column":17}},{"start":{"line":196,"column":14},"end":{"line":196,"column":22}},{"start":{"line":197,"column":14},"end":{"line":198,"column":40}}],"line":144},"4":{"loc":{"start":{"line":158,"column":16},"end":{"line":161,"column":17}},"type":"if","locations":[{"start":{"line":158,"column":16},"end":{"line":161,"column":17}},{"start":{"line":158,"column":16},"end":{"line":161,"column":17}}],"line":158}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":1,"13":1,"14":1,"15":2,"16":2,"17":1,"18":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":2,"33":2,"34":1,"35":1,"36":1,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":1,"81":1},"f":{"0":1,"1":0,"2":1,"3":1,"4":2,"5":1,"6":1,"7":1,"8":2,"9":1,"10":1,"11":0,"12":0,"13":0},"b":{"0":[1,0,1,1,1],"1":[1,0,0,0,1,1,1],"2":[0,0],"3":[0,0,0,0,0,0,0,0],"4":[0,0]},"inputSourceMap":{"version":3,"sources":["userController.js"],"names":["User","models","UserController","req","res","findAll","allUsers","status","json","message","console","log","body","findOne","where","email","existingUser","name","create","savedUser","update","updatedUser","Error"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;IAEQA,I,GAASC,kB,CAATD,I;;IAEKE,c;;;;;;;;qHACWC,G,EAAKC,G;;;;;;;;uBAEAJ,IAAI,CAACK,OAAL,E;;;AAAjBC,gBAAAA,Q;AAENF,gBAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,kBAAAA,OAAO,EAAEH;AAAX,iBAArB;;;;;;;AAEAF,gBAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB;;;;;;;;;;;;;;;;;;;qHAIiBL,G,EAAKC,G;;;;;;;AAEtB;AACAM,gBAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACS,IAAhB;;uBAC2BZ,IAAI,CAACa,OAAL,CAAa;AACtCC,kBAAAA,KAAK,EAAE;AAAEC,oBAAAA,KAAK,EAALA;AAAF;AAD+B,iBAAb,C;;;AAArBC,gBAAAA,Y;;qBAIFA,Y;;;;;kDAAqBZ,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,kBAAAA,OAAO,EAAE,qBAAX;AAAkCQ,kBAAAA,IAAI,EAAJA,IAAlC;AAAwCF,kBAAAA,KAAK,EAAEC,YAAY,CAACD;AAA5D,iBAArB,C;;;;uBAEDf,IAAI,CAACkB,MAAL,CAAY;AAClCH,kBAAAA,KAAK,EAALA;AADkC,iBAAZ,C;;;AAAlBI,gBAAAA,S;AAGNf,gBAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,kBAAAA,OAAO,EAAE,+BADU;AAEnBU,kBAAAA,SAAS,EAATA;AAFmB,iBAArB;;;;;;;AAKAf,gBAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB;;;;;;;;;;;;;;;;;;;wHAIoBL,G,EAAKC,G;;;;;;;;4BAEDD,GAAG,CAACS,I,EAApBK,K,aAAAA,I,EAAMF,M,aAAAA,K;;uBACaf,IAAI,CAACa,OAAL,CAAa;AACtCC,kBAAAA,KAAK,EAAE;AAAEC,oBAAAA,KAAK,EAALA;AAAF;AAD+B,iBAAb,C;;;AAArBC,gBAAAA,Y;;oBAIDA,Y;;;;;kDAAqBZ,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,kBAAAA,OAAO,EAAE,sBAAX;AAAmCQ,kBAAAA,IAAI,EAAJA,KAAnC;AAAyCF,kBAAAA,KAAK,EAALA;AAAzC,iBAArB,C;;;;uBAEAf,IAAI,CAACoB,MAAL,CAAY;AAAEH,kBAAAA,IAAI,EAAJA;AAAF,iBAAZ,EAAsB;AAC9CA,kBAAAA,IAAI,EAAE;AADwC,iBAAtB,C;;;AAApBI,gBAAAA,W;AAGNjB,gBAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,kBAAAA,OAAO,EAAE,eAAX;AAA4BY,kBAAAA,WAAW,EAAXA;AAA5B,iBAArB;;;;;;;AAEAjB,gBAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEc,kBAAAA,KAAK;AAAP,iBAArB;;;AACD;;;;;;;;;;;;;;;;;;;;;AAEJ","sourceRoot":"/Users/SamuelNayo/Documents/codegig/src/controllers/","sourcesContent":["import { create } from 'express-handlebars';\nimport models from '../database/models';\n\nconst { User } = models;\n\nexport class UserController {\n  static async getUsers(req, res) {\n    try {\n      const allUsers = await User.findAll();\n      \n      res.status(200).json({ message: allUsers });\n    } catch (error) {\n      res.status(400).json(`Error: ${error}`);\n    }\n  };\n  \n  static async addUser(req, res) {\n    try {\n      // const { name, email } = req.body;\n      console.log(req.body)\n      const existingUser = await User.findOne({\n        where: { email }\n      });\n      \n      if (existingUser) return res.status(409).json({ message: 'User already exist!', name, email: existingUser.email });\n      \n      const savedUser = await User.create({\n        email\n      })\n      res.status(201).json({\n        message: 'User registered successfully!',\n        savedUser\n      });\n    } catch (error) {\n      res.status(400).json(`Error: ${error}`);\n    }\n  };\n  \n  static async updateUser(req, res) {\n    try {\n      const { name, email } = req.body;\n      const existingUser = await User.findOne({\n        where: { email }\n      });\n      \n      if (!existingUser) return res.status(400).json({ message: 'User does not exist!', name, email });\n      \n      const updatedUser = await User.update({ name }, {\n        name: 'Samuel Doe'\n      });\n      res.status(200).json({ message: 'User updated!', updatedUser });\n    } catch (error) {\n      res.status(400).json({ Error: error })\n    };\n  };\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6c6e1a4d8862a5913df37cbbfa884ee2cfce18c5","contentHash":"eaa2b08f9275b0ee10faa3ffa120040d442cbc96873c3338f69905fa97ef6fca"},"/Users/SamuelNayo/Documents/codegig/src/database/models/index.js":{"path":"/Users/SamuelNayo/Documents/codegig/src/database/models/index.js","statementMap":{"0":{"start":{"line":3,"column":29},"end":{"line":3,"column":84}},"1":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"3":{"start":{"line":10,"column":10},"end":{"line":10,"column":23}},"4":{"start":{"line":12,"column":12},"end":{"line":12,"column":27}},"5":{"start":{"line":14,"column":17},"end":{"line":14,"column":61}},"6":{"start":{"line":16,"column":14},"end":{"line":16,"column":68}},"7":{"start":{"line":18,"column":15},"end":{"line":18,"column":46}},"8":{"start":{"line":19,"column":10},"end":{"line":19,"column":47}},"9":{"start":{"line":20,"column":13},"end":{"line":20,"column":36}},"10":{"start":{"line":21,"column":9},"end":{"line":21,"column":11}},"11":{"start":{"line":24,"column":0},"end":{"line":28,"column":1}},"12":{"start":{"line":25,"column":2},"end":{"line":25,"column":60}},"13":{"start":{"line":27,"column":2},"end":{"line":27,"column":99}},"14":{"start":{"line":30,"column":0},"end":{"line":36,"column":3}},"15":{"start":{"line":31,"column":2},"end":{"line":31,"column":82}},"16":{"start":{"line":33,"column":14},"end":{"line":33,"column":99}},"17":{"start":{"line":35,"column":2},"end":{"line":35,"column":25}},"18":{"start":{"line":37,"column":0},"end":{"line":41,"column":3}},"19":{"start":{"line":38,"column":2},"end":{"line":40,"column":3}},"20":{"start":{"line":39,"column":4},"end":{"line":39,"column":32}},"21":{"start":{"line":42,"column":0},"end":{"line":42,"column":25}},"22":{"start":{"line":43,"column":0},"end":{"line":43,"column":37}},"23":{"start":{"line":44,"column":15},"end":{"line":44,"column":17}},"24":{"start":{"line":45,"column":0},"end":{"line":45,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":30,"column":39},"end":{"line":30,"column":40}},"loc":{"start":{"line":30,"column":55},"end":{"line":32,"column":1}},"line":30},"1":{"name":"(anonymous_1)","decl":{"start":{"line":32,"column":11},"end":{"line":32,"column":12}},"loc":{"start":{"line":32,"column":27},"end":{"line":36,"column":1}},"line":32},"2":{"name":"(anonymous_2)","decl":{"start":{"line":37,"column":24},"end":{"line":37,"column":25}},"loc":{"start":{"line":37,"column":45},"end":{"line":41,"column":1}},"line":37}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":10},"end":{"line":19,"column":47}},"type":"binary-expr","locations":[{"start":{"line":19,"column":10},"end":{"line":19,"column":30}},{"start":{"line":19,"column":34},"end":{"line":19,"column":47}}],"line":19},"1":{"loc":{"start":{"line":24,"column":0},"end":{"line":28,"column":1}},"type":"if","locations":[{"start":{"line":24,"column":0},"end":{"line":28,"column":1}},{"start":{"line":24,"column":0},"end":{"line":28,"column":1}}],"line":24},"2":{"loc":{"start":{"line":31,"column":9},"end":{"line":31,"column":81}},"type":"binary-expr","locations":[{"start":{"line":31,"column":9},"end":{"line":31,"column":32}},{"start":{"line":31,"column":36},"end":{"line":31,"column":53}},{"start":{"line":31,"column":57},"end":{"line":31,"column":81}}],"line":31},"3":{"loc":{"start":{"line":38,"column":2},"end":{"line":40,"column":3}},"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":40,"column":3}},{"start":{"line":38,"column":2},"end":{"line":40,"column":3}}],"line":38}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":1,"15":4,"16":3,"17":3,"18":1,"19":3,"20":3,"21":1,"22":1,"23":1,"24":1},"f":{"0":4,"1":3,"2":3},"b":{"0":[1,0],"1":[1,0],"2":[4,4,3],"3":[3,0]},"inputSourceMap":{"version":3,"sources":["index.js"],"names":["basename","__filename","env","process","NODE_ENV","config","envConfigs","db","sequelize","url","Sequelize","database","username","password","__dirname","filter","file","indexOf","slice","forEach","model","require","DataTypes","name","Object","keys","modelName","associate"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,IAAMA,QAAQ,GAAG,oBAAUC,UAAV,CAAjB;AACA,IAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACA,IAAMC,MAAM,GAAGC,mBAAWJ,GAAX,CAAf;AACA,IAAMK,EAAE,GAAG,EAAX;AAEA,IAAIC,SAAJ;;AACA,IAAIH,MAAM,CAACI,GAAX,EAAgB;AACdD,EAAAA,SAAS,GAAG,IAAIE,qBAAJ,CAAcL,MAAM,CAACI,GAArB,EAA0BJ,MAA1B,CAAZ;AACD,CAFD,MAEO;AACLG,EAAAA,SAAS,GAAG,IAAIE,qBAAJ,CAAcL,MAAM,CAACM,QAArB,EAA+BN,MAAM,CAACO,QAAtC,EAAgDP,MAAM,CAACQ,QAAvD,EAAiER,MAAjE,CAAZ;AACD;;AAED,qBAAYS,SAAZ,EACGC,MADH,CACU,UAAAC,IAAI,EAAI;AACd,SAAQA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,IAAI,KAAKhB,QAAvC,IAAqDgB,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACD,CAHH,EAIGC,OAJH,CAIW,UAAAH,IAAI,EAAI;AACf,MAAMI,KAAK,GAAGC,OAAO,CAAC,gBAAKP,SAAL,EAAgBE,IAAhB,CAAD,CAAP,CAA+BR,SAA/B,EAA0CE,sBAAUY,SAApD,CAAd;;AACAf,EAAAA,EAAE,CAACa,KAAK,CAACG,IAAP,CAAF,GAAiBH,KAAjB;AACD,CAPH;AASAI,MAAM,CAACC,IAAP,CAAYlB,EAAZ,EAAgBY,OAAhB,CAAwB,UAAAO,SAAS,EAAI;AACnC,MAAInB,EAAE,CAACmB,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3BpB,IAAAA,EAAE,CAACmB,SAAD,CAAF,CAAcC,SAAd,CAAwBpB,EAAxB;AACD;AACF,CAJD;AAMAA,EAAE,CAACC,SAAH,GAAeA,SAAf;AACAD,EAAE,CAACG,SAAH,GAAeA,qBAAf;eAEeH,E","sourceRoot":"/Users/SamuelNayo/Documents/codegig/src/database/models/","sourcesContent":["import { readdirSync } from 'fs';\nimport { basename as _basename, join } from 'path';\nimport Sequelize from 'sequelize';\nimport envConfigs from '../../config/config';\n\nconst basename = _basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = envConfigs[env];\nconst db = {};\n\nlet sequelize;\nif (config.url) {\n  sequelize = new Sequelize(config.url, config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nreaddirSync(__dirname)\n  .filter(file => {\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\n  })\n  .forEach(file => {\n    const model = require(join(__dirname, file))(sequelize, Sequelize.DataTypes)\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nexport default db;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e747ad7216989fbcab1e7ac57b691f6782ec105c","contentHash":"d64cc90dfb0d996ea686e74be8d753863ca36a4d51d84c84321e3d7b0ff03b84"},"/Users/SamuelNayo/Documents/codegig/src/database/models/comment.js":{"path":"/Users/SamuelNayo/Documents/codegig/src/database/models/comment.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":23,"column":2}},"1":{"start":{"line":4,"column":16},"end":{"line":8,"column":8}},"2":{"start":{"line":10,"column":2},"end":{"line":20,"column":4}},"3":{"start":{"line":12,"column":4},"end":{"line":15,"column":7}},"4":{"start":{"line":16,"column":4},"end":{"line":19,"column":7}},"5":{"start":{"line":22,"column":2},"end":{"line":22,"column":17}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":17},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":49},"end":{"line":23,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":22},"end":{"line":10,"column":23}},"loc":{"start":{"line":10,"column":40},"end":{"line":20,"column":3}},"line":10}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1,"1":1},"b":{},"inputSourceMap":{"version":3,"sources":["comment.js"],"names":["module","exports","sequelize","DataTypes","Comment","define","postId","INTEGER","comment","TEXT","userId","associate","models","belongsTo","User","foreignKey","as","Post"],"mappings":";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,OAAO,GAAGF,SAAS,CAACG,MAAV,CAAiB,SAAjB,EAA4B;AAC1CC,IAAAA,MAAM,EAAEH,SAAS,CAACI,OADwB;AAE1CC,IAAAA,OAAO,EAAEL,SAAS,CAACM,IAFuB;AAG1CC,IAAAA,MAAM,EAAEP,SAAS,CAACI;AAHwB,GAA5B,EAIb,EAJa,CAAhB;;AAKAH,EAAAA,OAAO,CAACO,SAAR,GAAoB,UAASC,MAAT,EAAiB;AACnC;AACAR,IAAAA,OAAO,CAACS,SAAR,CAAkBD,MAAM,CAACE,IAAzB,EAA+B;AAC7BC,MAAAA,UAAU,EAAE,QADiB;AAE7BC,MAAAA,EAAE,EAAE;AAFyB,KAA/B;AAIAZ,IAAAA,OAAO,CAACS,SAAR,CAAkBD,MAAM,CAACK,IAAzB,EAA+B;AAC7BF,MAAAA,UAAU,EAAE,QADiB;AAE7BC,MAAAA,EAAE,EAAE;AAFyB,KAA/B;AAID,GAVD;;AAWA,SAAOZ,OAAP;AACD,CAlBD","sourceRoot":"/Users/SamuelNayo/Documents/codegig/src/database/models/","sourcesContent":["module.exports = (sequelize, DataTypes) => {\n  const Comment = sequelize.define('Comment', {\n    postId: DataTypes.INTEGER,\n    comment: DataTypes.TEXT,\n    userId: DataTypes.INTEGER\n  }, {});\n  Comment.associate = function(models) {\n    // associations can be defined here\n    Comment.belongsTo(models.User, {\n      foreignKey: 'userId',\n      as: 'author'\n    });\n    Comment.belongsTo(models.Post, {\n      foreignKey: 'postId',\n      as: 'post'\n    });\n  };\n  return Comment;\n};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1b1cdb0f55801909a86b8a8fa7a0853abfd93bae","contentHash":"e12d9b2420a32f1acfdcfb9ca45a7af20080b7201093e774cb769c2ceeaf23b2"},"/Users/SamuelNayo/Documents/codegig/src/database/models/post.js":{"path":"/Users/SamuelNayo/Documents/codegig/src/database/models/post.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":25,"column":2}},"1":{"start":{"line":4,"column":13},"end":{"line":8,"column":8}},"2":{"start":{"line":10,"column":2},"end":{"line":22,"column":4}},"3":{"start":{"line":12,"column":4},"end":{"line":16,"column":7}},"4":{"start":{"line":17,"column":4},"end":{"line":21,"column":7}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":14}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":17},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":49},"end":{"line":25,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":19},"end":{"line":10,"column":20}},"loc":{"start":{"line":10,"column":37},"end":{"line":22,"column":3}},"line":10}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1,"1":1},"b":{},"inputSourceMap":{"version":3,"sources":["post.js"],"names":["module","exports","sequelize","DataTypes","Post","define","title","STRING","content","TEXT","userId","INTEGER","associate","models","hasMany","Comment","foreignKey","as","onDelete","belongsTo","User"],"mappings":";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,IAAI,GAAGF,SAAS,CAACG,MAAV,CAAiB,MAAjB,EAAyB;AACpCC,IAAAA,KAAK,EAAEH,SAAS,CAACI,MADmB;AAEpCC,IAAAA,OAAO,EAAEL,SAAS,CAACM,IAFiB;AAGpCC,IAAAA,MAAM,EAAEP,SAAS,CAACQ;AAHkB,GAAzB,EAIV,EAJU,CAAb;;AAKAP,EAAAA,IAAI,CAACQ,SAAL,GAAiB,UAASC,MAAT,EAAiB;AAChC;AACAT,IAAAA,IAAI,CAACU,OAAL,CAAaD,MAAM,CAACE,OAApB,EAA6B;AAC3BC,MAAAA,UAAU,EAAE,QADe;AAE3BC,MAAAA,EAAE,EAAE,UAFuB;AAG3BC,MAAAA,QAAQ,EAAE;AAHiB,KAA7B;AAMAd,IAAAA,IAAI,CAACe,SAAL,CAAeN,MAAM,CAACO,IAAtB,EAA4B;AAC1BJ,MAAAA,UAAU,EAAE,QADc;AAE1BC,MAAAA,EAAE,EAAE,QAFsB;AAG1BC,MAAAA,QAAQ,EAAE;AAHgB,KAA5B;AAKD,GAbD;;AAcA,SAAOd,IAAP;AACD,CArBD","sourceRoot":"/Users/SamuelNayo/Documents/codegig/src/database/models/","sourcesContent":["module.exports = (sequelize, DataTypes) => {\n  const Post = sequelize.define('Post', {\n    title: DataTypes.STRING,\n    content: DataTypes.TEXT,\n    userId: DataTypes.INTEGER\n  }, {});\n  Post.associate = function(models) {\n    // associations can be defined here\n    Post.hasMany(models.Comment, {\n      foreignKey: 'postId',\n      as: 'comments',\n      onDelete: 'CASCADE',\n    });\n\n    Post.belongsTo(models.User, {\n      foreignKey: 'userId',\n      as: 'author',\n      onDelete: 'CASCADE',\n    })\n  };\n  return Post;\n};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a3fb271fb20be8d94faf5233713547c0c2c3e60f","contentHash":"dec3d807cd5fd8f526352e735a2cfaae520240720b7e5a35b3358b9606e885dd"},"/Users/SamuelNayo/Documents/codegig/src/database/models/user.js":{"path":"/Users/SamuelNayo/Documents/codegig/src/database/models/user.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":24,"column":2}},"1":{"start":{"line":4,"column":13},"end":{"line":7,"column":8}},"2":{"start":{"line":9,"column":2},"end":{"line":21,"column":4}},"3":{"start":{"line":11,"column":4},"end":{"line":15,"column":7}},"4":{"start":{"line":16,"column":4},"end":{"line":20,"column":7}},"5":{"start":{"line":23,"column":2},"end":{"line":23,"column":14}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":17},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":49},"end":{"line":24,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":19},"end":{"line":9,"column":20}},"loc":{"start":{"line":9,"column":37},"end":{"line":21,"column":3}},"line":9}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1,"1":1},"b":{},"inputSourceMap":{"version":3,"sources":["user.js"],"names":["module","exports","sequelize","DataTypes","User","define","name","STRING","email","associate","models","hasMany","Post","foreignKey","as","onDelete","Comment"],"mappings":";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,IAAI,GAAGF,SAAS,CAACG,MAAV,CAAiB,MAAjB,EAAyB;AACpCC,IAAAA,IAAI,EAAEH,SAAS,CAACI,MADoB;AAEpCC,IAAAA,KAAK,EAAEL,SAAS,CAACI;AAFmB,GAAzB,EAGV,EAHU,CAAb;;AAIAH,EAAAA,IAAI,CAACK,SAAL,GAAiB,UAASC,MAAT,EAAiB;AAChC;AACAN,IAAAA,IAAI,CAACO,OAAL,CAAaD,MAAM,CAACE,IAApB,EAA0B;AACxBC,MAAAA,UAAU,EAAE,QADY;AAExBC,MAAAA,EAAE,EAAE,OAFoB;AAGxBC,MAAAA,QAAQ,EAAE;AAHc,KAA1B;AAMAX,IAAAA,IAAI,CAACO,OAAL,CAAaD,MAAM,CAACM,OAApB,EAA6B;AAC3BH,MAAAA,UAAU,EAAE,QADe;AAE3BC,MAAAA,EAAE,EAAE,UAFuB;AAG3BC,MAAAA,QAAQ,EAAE;AAHiB,KAA7B;AAKD,GAbD;;AAcA,SAAOX,IAAP;AACD,CApBD","sourceRoot":"/Users/SamuelNayo/Documents/codegig/src/database/models/","sourcesContent":["module.exports = (sequelize, DataTypes) => {\n  const User = sequelize.define('User', {\n    name: DataTypes.STRING,\n    email: DataTypes.STRING\n  }, {});\n  User.associate = function(models) {\n    // associations can be defined here\n    User.hasMany(models.Post, {\n      foreignKey: 'userId',\n      as: 'posts',\n      onDelete: 'CASCADE',\n    });\n\n    User.hasMany(models.Comment, {\n      foreignKey: 'userId',\n      as: 'comments',\n      onDelete: 'CASCADE',\n    });\n  };\n  return User;\n};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"91f274f1fb852e20ce69cabe0dc133a774edeec0","contentHash":"746a9302e611c888473ae89ae15e4eb95bc6aedb99549441af9ace24b97cf6f7"}}